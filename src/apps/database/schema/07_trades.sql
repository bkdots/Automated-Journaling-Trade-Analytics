CREATE TABLE IF NOT EXISTS trades
(
    trade_id SERIAL PRIMARY KEY,
    journal_id INTEGER NOT NULL,
    trade_type VARCHAR(10) NOT NULL CHECK (direction IN ('Spot', 'Option', 'Future')),
    instrument VARCHAR(50) NOT NULL,
    setup_id INTEGER NULL,
    entry_date DATE NOT NULL,
    exit_date DATE NULL,
    direction VARCHAR(10) NOT NULL CHECK (direction IN ('Buy', 'Sell')),
    option_type VARCHAR(10) NULL CHECK (option_type IN ('Call', 'Put')),
    multiplier INTEGER NULL,
    entry_price DECIMAL(10, 2) NOT NULL,
    quantity DECIMAL(10, 2) NOT NULL,
    stop_loss DECIMAL(10, 2) NULL,
    take_profit DECIMAL(10, 2) NULL,
    exit_price DECIMAL(10, 2) NULL,
    net_profit_loss DECIMAL(10, 2) NULL,
    gross_profit_loss DECIMAL(10, 2) NULL,
    fees DECIMAL(10, 2) NULL,
    tag_id INTEGER NULL,
    thread_id INTEGER[] NULL,
    notes TEXT NULL,
    confidence INTEGER NULL,
    entry_rating INTEGER NULL,
    exit_rating INTEGER NULL,
    execution_rating INTEGER NULL,
    management_rating INTEGER NULL,
    image_id VARCHAR(255) NULL, -- Assuming the image_id is a reference or key to an S3 object
    highest_price DECIMAL(10, 2) NULL,
    lowest_price DECIMAL(10, 2) NULL,
    origin_take_profit_hit BOOLEAN NULL,
    FOREIGN KEY (journal_id) REFERENCES journals(journal_id),
    FOREIGN KEY (setup_id) REFERENCES setups(setup_id),
    FOREIGN KEY (tag_id) REFERENCES tags(tag_id),
    FOREIGN KEY (thread_id) REFERENCES threads(thread_id),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);